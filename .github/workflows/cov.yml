on: [push, pull_request]

name: Coverage

jobs:
  Tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # https://github.com/actions-rs/grcov

      # Install the tool chain, nigtly.
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal

      # clean up the build files.
      - name: Cleanup the build files
        uses: actions-rs/cargo@v1
        with:
          command: clean

      # execute the tests for the library
      - name: Execute tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast  # Customize args for your own needs
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

      - run: echo "VLD - Gathering data ..."

      # gather the coverage gata
      - name: Gather coverage data
        id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          args: --ignore "../*, /../../../../../usr/*"

      - run: echo "VLD - trying to upload data to codecov"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage1.xml,./coverage2.xml
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
